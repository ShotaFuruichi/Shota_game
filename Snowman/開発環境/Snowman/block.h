////////////////////////////////////////////////////////////////////////////////
//
//Contents	: ブロックの処理 [block.h]
//Author	: Shota Furuichi
//Since		: 2020/10/13
//
////////////////////////////////////////////////////////////////////////////////
#ifndef _BLOCK_H_
#define _BLOCK_H_
#include "main.h"

////////////////////////////////////////////////////////////////////////////////
//マクロ定義
////////////////////////////////////////////////////////////////////////////////
#define MAX_BLOCK (2048)
#define BLOCK_SIZE (60)

////////////////////////////////////////////////////////////////////////////////
//ブロックの種類
////////////////////////////////////////////////////////////////////////////////
typedef enum
{
	BLOCKTYPE_NONE = 0,
	BLOCKTYPE_NORMAL,
	BLOCKTYPE_GROUND,
	BLOCKTYPE_SNOWGROUND,
	BLOCKTYPE_GRASSGROUND,
	BLOCKTYPE_MOVE,
	BLOCKTYPE_MAX
} BLOCKTYPE;

////////////////////////////////////////////////////////////////////////////////
//構造体の定義
////////////////////////////////////////////////////////////////////////////////
typedef struct
{
	D3DXVECTOR3 pos;	//位置
	D3DXVECTOR3 PosOld;	//前の位置
	float fWidth;		//幅
	float fHeight;		//高さ
	bool bUse;			//使っているか
	bool bDisp;			//見えるか
	bool bMove;			//移動量
	D3DXCOLOR col;		//色
	int nTexX;			//テクスチャを何枚張るかX
	int nTexY;			//テクスチャを何枚張るかY
	BLOCKTYPE type;		//ブロックのタイプ
} BLOCK;

////////////////////////////////////////////////////////////////////////////////
//プロトタイプ宣言
////////////////////////////////////////////////////////////////////////////////
HRESULT InitBlock(void);
void UninitBlock(void);
void UpdateBlock(void);
void DrawBlock(void);
void SetBlock(D3DXVECTOR3 pos, float fWidth, float fHeight, bool bDisp, bool bMove, D3DXCOLOR col, int texX, int texY, BLOCKTYPE type);
void SetVertexBlock(int nIdx);
void SetColorBlock(int nIdx);
void SetTextureBlock(int nIdx);
bool CollisionBlock(D3DXVECTOR3 *pPos, D3DXVECTOR3 *pPosOld, D3DXVECTOR3 *pMove, float fWidth, float fHeight);
bool GetMove(void);

#endif