////////////////////////////////////////////////////////////////////////////////
//
//Contents	: プレイヤーの処理 [player.h]
//Author	: ShotaFuruichi
//Since		: 2020/07/21
//
////////////////////////////////////////////////////////////////////////////////
#ifndef _PLAYER_H_
#define _PLAYER_H_
#include "main.h"

////////////////////////////////////////////////////////////////////////////////
//プレイヤーの状態
////////////////////////////////////////////////////////////////////////////////
typedef enum
{
	PLAYERSTATE_APPER = 0,	//出現
	PLAYERSTATE_NORMAL,		//通常
	PLAYERSTATE_DAMAGE,		//ダメージ
	PLAYERSTATE_WAIT,		//出現待ち
	PLAYERSTATE_DEATH,		//死亡
	PLAYERSTATE_MAX
} PLAYERSTATE;

////////////////////////////////////////////////////////////////////////////////
//構造体の宣言
////////////////////////////////////////////////////////////////////////////////
typedef struct
{
	D3DXVECTOR3 pos;	//位置
	D3DXVECTOR3 rot;	//回転角
	float fLength;		//中心からの対角線までの長さ
	float fAngle;		//対角線の角度
	int nLife;			//体力
	PLAYERSTATE state;	//状態
	int nCounterState;	//状態カウンタ
	int nCounterDisp;	//表示カウンタ
	bool bDisp;			//表示ON/OFF
	D3DXCOLOR col;		//色
	int BulletType;		//弾の種類
	int BulletResidue;	//特殊弾残弾数
} PLAYER;

////////////////////////////////////////////////////////////////////////////////
//プロトタイプ宣言
////////////////////////////////////////////////////////////////////////////////
HRESULT InitPlayer(void);
void UninitPlayer(void);
void UpdatePlayer(void);
void DrawPlayer(void);
void SetVertexPlayer(void);
void ShotPlayer(void);
void MovePlayer(void);
void SetColor(void);
PLAYER *GetPlayer(void);
void HitPlayer(void);
void HitItem(void);

#endif