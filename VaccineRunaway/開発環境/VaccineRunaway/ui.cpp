////////////////////////////////////////////////////////////////////////////////
//
//Contents	: uiの処理 [ui.cpp]
//Author	: ShotaFuruichi
//Since		: 2020/09/29
//
////////////////////////////////////////////////////////////////////////////////
#include "ui.h"
#include "player.h"
#include "item.h"

////////////////////////////////////////////////////////////////////////////////
//グローバル変数
////////////////////////////////////////////////////////////////////////////////
LPDIRECT3DVERTEXBUFFER9 g_pVtxBuffItemUi = NULL;	//頂点情報
LPDIRECT3DTEXTURE9 g_pTextureItemUi[4] = {};		//テクスチャ情報

////////////////////////////////////////////////////////////////////////////////
//背景の初期化処理
////////////////////////////////////////////////////////////////////////////////
HRESULT InitUi(void)
{
	//変数宣言
	VERTEX_2D *pVtx;
	LPDIRECT3DDEVICE9 pDevice;

	//デバイスの取得
	pDevice = GetDevice();

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice, "data\\TEXTURE\\bullet000.png", &g_pTextureItemUi[0]);
	D3DXCreateTextureFromFile(pDevice, "data\\TEXTURE\\item002.png", &g_pTextureItemUi[ITEM_THROUGH]);
	D3DXCreateTextureFromFile(pDevice, "data\\TEXTURE\\item000.png", &g_pTextureItemUi[ITEM_REFLECTIVE]);
	D3DXCreateTextureFromFile(pDevice, "data\\TEXTURE\\item003.png", &g_pTextureItemUi[ITEM_DIFFUSION]);

	//頂点バッファの生成
	if (FAILED(pDevice->CreateVertexBuffer(sizeof(VERTEX_2D) * 4, D3DUSAGE_WRITEONLY, FVF_VERTEX_2D, D3DPOOL_MANAGED, &g_pVtxBuffItemUi, NULL)))
	{
		return E_FAIL;
	}

	//頂点バッファをロックし、頂点情報へのポインタを取得
	g_pVtxBuffItemUi->Lock(0, 0, (void**)&pVtx, 0);

	//頂点座標の設定
	pVtx[0].pos = D3DXVECTOR3(100.0f, 50.0f, 0);
	pVtx[1].pos = D3DXVECTOR3(100.0f, 10.0f, 0);
	pVtx[2].pos = D3DXVECTOR3(170.0f, 50.0f, 0);
	pVtx[3].pos = D3DXVECTOR3(170.0f, 10.0f, 0);

	//rhwの設定
	pVtx[0].rhw = 1.0f;
	pVtx[1].rhw = 1.0f;
	pVtx[2].rhw = 1.0f;
	pVtx[3].rhw = 1.0f;

	//頂点カラーの設定
	pVtx[0].col = D3DCOLOR_RGBA(255, 255, 255, 255);
	pVtx[1].col = D3DCOLOR_RGBA(255, 255, 255, 255);
	pVtx[2].col = D3DCOLOR_RGBA(255, 255, 255, 255);
	pVtx[3].col = D3DCOLOR_RGBA(255, 255, 255, 255);

	//頂点情報の設定
	pVtx[0].tex = D3DXVECTOR2(0.0f, 1.0f);
	pVtx[1].tex = D3DXVECTOR2(0.0f, 0.0f);
	pVtx[2].tex = D3DXVECTOR2(1.0f, 1.0f);
	pVtx[3].tex = D3DXVECTOR2(1.0f, 0.0f);

	//頂点バッファをアンロックする
	g_pVtxBuffItemUi->Unlock();

	return S_OK;
}

////////////////////////////////////////////////////////////////////////////////
//背景の終了処理
////////////////////////////////////////////////////////////////////////////////
void UninitUi(void)
{
	//頂点バッファの開放
	if (g_pVtxBuffItemUi != NULL)
	{
		g_pVtxBuffItemUi->Release();	//開放
		g_pVtxBuffItemUi = NULL;		//初期化
	}

	//テクスチャの開放
	for (int nCntType = 0; nCntType < MAX_ITEMTYPE; nCntType++)
	{
		if (g_pTextureItemUi[nCntType] != NULL)
		{
			g_pTextureItemUi[nCntType]->Release();	//開放
			g_pTextureItemUi[nCntType] = NULL;		//初期化
		}
	}
}

////////////////////////////////////////////////////////////////////////////////
//背景の更新処理
////////////////////////////////////////////////////////////////////////////////
void UpdateUi(void)
{
	//変数宣言
	PLAYER *pPlayer;

	pPlayer = GetPlayer();

	switch (pPlayer->BulletType)
	{
	case 0:
		SetVertexNormalItemUi();
		break;
	default:
		SetVertexSpecialItemUi();
	}
}

////////////////////////////////////////////////////////////////////////////////
//背景の描画処理
////////////////////////////////////////////////////////////////////////////////
void DrawUi(void)
{
	//変数宣言
	LPDIRECT3DDEVICE9 pDevice;
	PLAYER *pPlayer;

	pPlayer = GetPlayer();

	//デバイスの取得
	pDevice = GetDevice();

	//頂点バッファをデータストリームに設定
	pDevice->SetStreamSource(0, g_pVtxBuffItemUi, 0, sizeof(VERTEX_2D));

	//頂点フォーマットの設定
	pDevice->SetFVF(FVF_VERTEX_2D);

	//テクスチャの設定
	switch (pPlayer->BulletType)
	{
	case ITEM_THROUGH:
		pDevice->SetTexture(0, g_pTextureItemUi[ITEM_THROUGH]);
		break;

	case ITEM_REFLECTIVE:
		pDevice->SetTexture(0, g_pTextureItemUi[ITEM_REFLECTIVE]);
		break;

	case ITEM_DIFFUSION:
		pDevice->SetTexture(0, g_pTextureItemUi[ITEM_DIFFUSION]);
		break;
	default:
		pDevice->SetTexture(0, g_pTextureItemUi[0]);
		break;
	}
	
	//ポリゴンの描画
	pDevice->DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 2);
}

////////////////////////////////////////////////////////////////////////////////
//通常時頂点座標設定
////////////////////////////////////////////////////////////////////////////////
void SetVertexNormalItemUi(void)
{
	//変数宣言
	VERTEX_2D *pVtx;

	//頂点バッファをロックし、頂点情報へのポインタを取得
	g_pVtxBuffItemUi->Lock(0, 0, (void**)&pVtx, 0);

	//頂点座標の設定
	pVtx[0].pos = D3DXVECTOR3(115.0f, 50.0f, 0);
	pVtx[1].pos = D3DXVECTOR3(115.0f, 10.0f, 0);
	pVtx[2].pos = D3DXVECTOR3(155.0f, 50.0f, 0);
	pVtx[3].pos = D3DXVECTOR3(155.0f, 10.0f, 0);

	//頂点バッファをアンロックする
	g_pVtxBuffItemUi->Unlock();
}

////////////////////////////////////////////////////////////////////////////////
//通常時頂点座標設定
////////////////////////////////////////////////////////////////////////////////
void SetVertexSpecialItemUi(void)
{
	//変数宣言
	VERTEX_2D *pVtx;

	//頂点バッファをロックし、頂点情報へのポインタを取得
	g_pVtxBuffItemUi->Lock(0, 0, (void**)&pVtx, 0);

	//頂点座標の設定
	pVtx[0].pos = D3DXVECTOR3(100.0f, 50.0f, 0);
	pVtx[1].pos = D3DXVECTOR3(100.0f, 10.0f, 0);
	pVtx[2].pos = D3DXVECTOR3(170.0f, 50.0f, 0);
	pVtx[3].pos = D3DXVECTOR3(170.0f, 10.0f, 0);

	//頂点バッファをアンロックする
	g_pVtxBuffItemUi->Unlock();
}