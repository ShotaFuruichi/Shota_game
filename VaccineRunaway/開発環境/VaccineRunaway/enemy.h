////////////////////////////////////////////////////////////////////////////////
//
//Contents	: 敵の処理 [enemy.h]
//Author	: ShotaFuruichi
//Since		: 2020/08/05
//
////////////////////////////////////////////////////////////////////////////////
#ifndef _ENEMY_H_
#define _ENEMY_H_
#include "main.h"

////////////////////////////////////////////////////////////////////////////////
//マクロ定義
////////////////////////////////////////////////////////////////////////////////
#define MAX_ENEMY (256)					//敵の最大数
#define ENEMY_SIZE (25.0f)				//敵のサイズ
#define BIGENEMY_SIZE (ENEMY_SIZE * 2)	//大きい敵のサイズ
#define ENEMY_SPEED (2.0f)				//敵の移動量
#define ENEMYTYPE_NORMAL (0)			//通常の敵
#define ENEMYTYPE_BIG (1)				//でかい敵
#define ENEMYTYPE_SHOT (2)				//弾を撃つ敵

////////////////////////////////////////////////////////////////////////////////
//敵の状態
////////////////////////////////////////////////////////////////////////////////
typedef enum
{
	ENEMYSTATE_NORMAL = 0,	//通常状態
	ENEMYSTATE_DAMAGE,		//ダメージ状態
	ENEMYSTATE_MAX
} ENEMYSTATE;

////////////////////////////////////////////////////////////////////////////////
//敵の構造体
////////////////////////////////////////////////////////////////////////////////
typedef struct
{
	D3DXVECTOR3 pos;	//位置
	D3DXVECTOR3 move;	//移動量
	int nType;			//種類
	bool bUse;			//使用しているかどうか
	ENEMYSTATE state;	//状態
	int nCounterState;	//状態カウンター
	int nLife;			//体力
	bool bSwitch;		//画面外に行くか
} ENEMY;

////////////////////////////////////////////////////////////////////////////////
//プロトタイプ宣言
////////////////////////////////////////////////////////////////////////////////
HRESULT InitEnemy(void);
void UninitEnemy(void);
void UpdateEnemy(void);
void DrawEnemy(void);
void SetEnemy(void);
ENEMY *GetEnemy(void);
void SetVertexEnemy(int nIdx);
void SetVertexBigEnemy(int nIdx);
bool HitEnemy(int nIdx, int nDamage);

#endif